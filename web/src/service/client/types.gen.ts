// This file is auto-generated by @hey-api/openapi-ts

export type ModelPageDtoModelResultDto = {
    count?: number;
    items?: Array<ModelResultDto>;
    start?: number;
    total?: number;
};

export type ModelResultDto = {
    distDetail?: Array<ModelResultDistDetailDto>;
    distroScore?: number;
    gitDetail?: Array<ModelResultGitMetadataDto>;
    gitScore?: number;
    langDetail?: Array<ModelResultLangDetailDto>;
    langScore?: number;
    link?: string;
    score?: number;
    scoreID?: number;
    updateTime?: string;
};

export type ModelResultDistDetailDto = {
    count?: number;
    impact?: number;
    pageRank?: number;
    type?: number;
    updateTime?: string;
};

export type ModelResultGitMetadataDto = {
    commitFrequency?: number;
    contributorCount?: number;
    createdSince?: string;
    language?: Array<string>;
    license?: Array<string>;
    orgCount?: number;
    updateTime?: string;
    updatedSince?: string;
};

export type ModelResultLangDetailDto = {
    depCount?: number;
    langEcoImpact?: number;
    type?: number;
    updateTime?: string;
};

export type GetHistoriesData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Git link
         */
        link: string;
        /**
         * Skip count
         */
        start?: number;
        /**
         * Take count
         */
        take?: number;
    };
    url: '/histories';
};

export type GetHistoriesResponses = {
    /**
     * OK
     */
    200: ModelPageDtoModelResultDto;
};

export type GetHistoriesResponse = GetHistoriesResponses[keyof GetHistoriesResponses];

export type GetResultsData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Search query
         */
        q: string;
        /**
         * Skip count
         */
        start?: number;
        /**
         * Take count
         */
        take?: number;
    };
    url: '/results';
};

export type GetResultsResponses = {
    /**
     * OK
     */
    200: ModelPageDtoModelResultDto;
};

export type GetResultsResponse = GetResultsResponses[keyof GetResultsResponses];

export type GetResultsByScoreidData = {
    body?: never;
    path: {
        /**
         * Score ID
         */
        scoreid: number;
    };
    query?: never;
    url: '/results/{scoreid}';
};

export type GetResultsByScoreidResponses = {
    /**
     * OK
     */
    200: ModelResultDto;
};

export type GetResultsByScoreidResponse = GetResultsByScoreidResponses[keyof GetResultsByScoreidResponses];

export type ClientOptions = {
    baseUrl: `${string}://src/api/v1` | (string & {});
};