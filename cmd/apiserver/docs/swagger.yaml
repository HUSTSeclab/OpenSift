definitions:
  gin.H:
    additionalProperties: {}
    type: object
  model.GitFileAppendManualReq:
    properties:
      gitLink:
        type: string
    type: object
  model.GitFileDTO:
    properties:
      failedTimes:
        type: integer
      filePath:
        type: string
      gitLink:
        type: string
      lastSuccess:
        type: string
      message:
        type: string
      success:
        type: boolean
      takeStorage:
        type: integer
      takeTimeMs:
        type: integer
      updateTime:
        type: string
    type: object
  model.GitFileStatisticsResultDTO:
    properties:
      fail:
        type: integer
      neverSuccess:
        type: integer
      success:
        type: integer
      total:
        type: integer
    type: object
  model.GitFileStatusResp:
    properties:
      collector:
        $ref: '#/definitions/rpc.StatusResp'
      gitFile:
        $ref: '#/definitions/model.GitFileStatisticsResultDTO'
    type: object
  model.GitHubCallbackResp:
    properties:
      token:
        type: string
    type: object
  model.GitHubClientIDResp:
    properties:
      clientId:
        type: string
    type: object
  model.KillToolInstanceReq:
    properties:
      signal:
        type: integer
    required:
    - signal
    type: object
  model.KillWorkflowJobReq:
    properties:
      type:
        description: '"stop" or "kill"'
        type: string
    required:
    - type
    type: object
  model.PageDTO-model_GitFileDTO:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/model.GitFileDTO'
        type: array
      start:
        type: integer
      total:
        type: integer
    type: object
  model.PageDTO-model_RankingResultDTO:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/model.RankingResultDTO'
        type: array
      start:
        type: integer
      total:
        type: integer
    type: object
  model.PageDTO-model_ResultDTO:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/model.ResultDTO'
        type: array
      start:
        type: integer
      total:
        type: integer
    type: object
  model.PageDTO-model_ToolInstanceHistoryDTO:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/model.ToolInstanceHistoryDTO'
        type: array
      start:
        type: integer
      total:
        type: integer
    type: object
  model.RankingResultDTO:
    properties:
      distDetail:
        items:
          $ref: '#/definitions/model.ResultDistDetailDTO'
        type: array
      distroScore:
        type: number
      gitDetail:
        items:
          $ref: '#/definitions/model.ResultGitMetadataDTO'
        type: array
      gitScore:
        type: number
      langDetail:
        items:
          $ref: '#/definitions/model.ResultLangDetailDTO'
        type: array
      langScore:
        type: number
      link:
        type: string
      ranking:
        type: integer
      score:
        type: number
      scoreID:
        type: integer
      updateTime:
        type: string
    type: object
  model.ResultDTO:
    properties:
      distDetail:
        items:
          $ref: '#/definitions/model.ResultDistDetailDTO'
        type: array
      distroScore:
        type: number
      gitDetail:
        items:
          $ref: '#/definitions/model.ResultGitMetadataDTO'
        type: array
      gitScore:
        type: number
      langDetail:
        items:
          $ref: '#/definitions/model.ResultLangDetailDTO'
        type: array
      langScore:
        type: number
      link:
        type: string
      score:
        type: number
      scoreID:
        type: integer
      updateTime:
        type: string
    type: object
  model.ResultDistDetailDTO:
    properties:
      count:
        type: integer
      impact:
        type: number
      pageRank:
        type: number
      type:
        type: integer
      updateTime:
        type: string
    type: object
  model.ResultGitMetadataDTO:
    properties:
      commitFrequency:
        type: number
      contributorCount:
        type: integer
      createdSince:
        type: string
      language:
        items:
          type: string
        type: array
      license:
        items:
          type: string
        type: array
      orgCount:
        type: integer
      updateTime:
        type: string
      updatedSince:
        type: string
    type: object
  model.ResultLangDetailDTO:
    properties:
      depCount:
        type: integer
      langEcoImpact:
        type: number
      type:
        type: integer
      updateTime:
        type: string
    type: object
  model.ToolArgDTO:
    properties:
      default: {}
      description:
        type: string
      name:
        description: Name is the name of the argument.
        type: string
      type:
        type: string
    type: object
  model.ToolCreateInstanceReq:
    properties:
      args:
        additionalProperties: {}
        type: object
      toolId:
        type: string
    type: object
  model.ToolDTO:
    properties:
      allowedSignals:
        items:
          $ref: '#/definitions/model.ToolSignalDTO'
        type: array
      args:
        items:
          $ref: '#/definitions/model.ToolArgDTO'
        type: array
      description:
        type: string
      group:
        type: string
      id:
        description: ID is the unique identifier for the toolset.
        type: string
      name:
        type: string
    type: object
  model.ToolInstanceHistoryDTO:
    properties:
      endTime:
        type: string
      err:
        type: string
      id:
        type: string
      isRunning:
        type: boolean
      launchUserName:
        type: string
      ret:
        type: integer
      startTime:
        type: string
      tool:
        $ref: '#/definitions/model.ToolDTO'
      toolId:
        type: string
      toolName:
        type: string
    type: object
  model.ToolSignalDTO:
    properties:
      description:
        type: string
      name:
        type: string
      value:
        type: integer
    type: object
  model.UpdateWorkflowStatusReq:
    properties:
      running:
        type: boolean
    required:
    - running
    type: object
  model.UserInfoResp:
    properties:
      policy:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  rpc.RoundDTO:
    properties:
      endTime:
        type: string
      id:
        type: string
      startTime:
        type: string
      tasks:
        items:
          $ref: '#/definitions/rpc.TaskDTO'
        type: array
    type: object
  rpc.RoundResp:
    properties:
      currentRound:
        type: integer
    type: object
  rpc.RunningTaskDTO:
    properties:
      link:
        type: string
      progress:
        type: string
      start:
        type: string
    type: object
  rpc.StatusResp:
    properties:
      currentTasks:
        items:
          $ref: '#/definitions/rpc.RunningTaskDTO'
        type: array
      isRunning:
        type: boolean
      pendingTasks:
        items:
          type: string
        type: array
    type: object
  rpc.TaskDTO:
    properties:
      args:
        type: string
      dependencies:
        items:
          type: string
        type: array
      description:
        type: string
      endTime:
        type: string
      name:
        type: string
      startTime:
        type: string
      status:
        $ref: '#/definitions/rpc.TaskStatus'
      title:
        type: string
      type:
        type: string
    type: object
  rpc.TaskStatus:
    enum:
    - pending
    - running
    - success
    - failed
    type: string
    x-enum-varnames:
    - TaskStatusPending
    - TaskStatusRunning
    - TaskStatusSuccess
    - TaskStatusFailed
info:
  contact: {}
paths:
  /admin/gitfiles:
    get:
      parameters:
      - description: Git link
        in: query
        name: link
        type: string
      - description: 'Filter, 0: no filter, 1: success, 2: fail, 3: never success'
        in: query
        name: filter
        type: integer
      - description: Skip count
        in: query
        name: skip
        type: integer
      - description: Take count
        in: query
        name: take
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PageDTO-model_GitFileDTO'
      summary: Get Git File List
  /admin/gitfiles/manual:
    post:
      consumes:
      - application/json
      parameters:
      - description: Append manual request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.GitFileAppendManualReq'
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Append to collector manual list
  /admin/gitfiles/start:
    post:
      description: Starts the Git File collection process
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Start Git File Collector
  /admin/gitfiles/status:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GitFileStatusResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get git files statistics and collector status
  /admin/gitfiles/stop:
    post:
      description: Stops the Git File collection process
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Stop Git File Collector
  /admin/session/github/callback:
    get:
      description: Handles the GitHub OAuth callback and returns JWT token if user
        is authorized
      parameters:
      - description: GitHub OAuth Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GitHubCallbackResp'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: GitHub OAuth callback
      tags:
      - admin
  /admin/session/github/clientid:
    get:
      description: Get github client id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GitHubClientIDResp'
      summary: Get github client id
      tags:
      - admin
  /admin/session/userinfo:
    get:
      description: Returns the authenticated user's username and policy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserInfoResp'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user information
      tags:
      - admin
  /admin/toolset/instances:
    get:
      description: 获取所有运行中的工具实例的信息
      parameters:
      - description: 是否获取所有实例，默认只获取运行中的实例
        in: query
        name: all
        type: boolean
      - description: 跳过的实例数量，默认0
        in: query
        name: skip
        type: integer
      - description: 获取的实例数量，默认10
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PageDTO-model_ToolInstanceHistoryDTO'
      summary: 获取运行中的工具实例列表
      tags:
      - toolset
    post:
      consumes:
      - application/json
      description: 根据工具ID和参数创建并运行工具实例
      parameters:
      - description: 工具实例创建参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.ToolCreateInstanceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ToolInstanceHistoryDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: 创建工具实例
      tags:
      - toolset
  /admin/toolset/instances/{id}:
    get:
      description: 获取指定ID的工具实例的详细信息
      parameters:
      - description: 实例ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ToolInstanceHistoryDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: 获取单个工具实例详情
      tags:
      - toolset
  /admin/toolset/instances/{id}/kill:
    post:
      description: 杀死指定工具实例
      parameters:
      - description: 实例ID
        in: path
        name: id
        required: true
        type: string
      - description: 工具实例杀死参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.KillToolInstanceReq'
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: 杀死工具实例
      tags:
      - toolset
  /admin/toolset/instances/{id}/log:
    get:
      description: 获取指定工具实例的日志
      parameters:
      - description: 实例ID
        in: path
        name: id
        required: true
        type: string
      - description: 是否获取所有日志，默认只获取最后1MB
        in: query
        name: all
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 日志内容
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: 获取工具实例日志
      tags:
      - toolset
  /admin/toolset/list:
    get:
      description: 获取所有可用工具的信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ToolDTO'
            type: array
      summary: 获取工具列表
      tags:
      - toolset
  /admin/workflows/kill:
    post:
      consumes:
      - application/json
      description: 杀死当前运行中的 workflow 任务
      parameters:
      - description: kill 参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.KillWorkflowJobReq'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 杀死 workflow 任务
      tags:
      - workflow
  /admin/workflows/maxRounds:
    get:
      description: 获取当前最大的 workflow 轮次 ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rpc.RoundResp'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 获取最大 workflow 轮次 ID
      tags:
      - workflow
  /admin/workflows/rounds/{id}:
    get:
      description: 根据轮次 ID 获取 workflow 详情
      parameters:
      - description: 轮次ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rpc.RoundDTO'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 获取指定 workflow 轮次详情
      tags:
      - workflow
  /admin/workflows/rounds/{id}/logs/{name}:
    get:
      description: 获取指定轮次和名称的 workflow 日志文件
      parameters:
      - description: 轮次ID
        in: path
        name: id
        required: true
        type: integer
      - description: 日志名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 获取 workflow 日志
      tags:
      - workflow
  /admin/workflows/status:
    post:
      consumes:
      - application/json
      description: 启动或停止 workflow 运行状态
      parameters:
      - description: workflow 状态参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UpdateWorkflowStatusReq'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: 启动或停止 workflow
      tags:
      - workflow
  /histories:
    get:
      consumes:
      - application/json
      description: Get score histories by git link
      parameters:
      - description: Git link
        in: query
        name: link
        required: true
        type: string
      - description: Skip count
        in: query
        name: start
        type: integer
      - description: Take count
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PageDTO-model_ResultDTO'
      summary: Get score histories
  /rankings:
    get:
      consumes:
      - application/json
      description: Get ranking results, optionally including all details
      parameters:
      - description: Skip count
        in: query
        name: start
        type: integer
      - description: Take count
        in: query
        name: take
        type: integer
      - description: Include details
        in: query
        name: detail
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PageDTO-model_RankingResultDTO'
      summary: Get ranking results
  /results:
    get:
      consumes:
      - application/json
      description: |-
        Search score results by git link
        NOTE: All details are ignored, should use /results/:scoreid to get details
        NOTE: Maxium take count is 1000
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - description: Skip count
        in: query
        name: start
        type: integer
      - description: Take count
        in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PageDTO-model_ResultDTO'
      summary: Search score results by git link
  /results/{scoreid}:
    get:
      consumes:
      - application/json
      description: Get score results, including all details by scoreid
      parameters:
      - description: Score ID
        in: path
        name: scoreid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResultDTO'
      summary: Get score results
swagger: "2.0"
